Python基础知识
==================================================================

1.为什么学习Python？
2.通过什么途径学习Python？
3.Python和Java、PHP、C、C#、C++等其他语言的对比？
4.简述解释型和编译型编程语言
5.Python解释器种类以及特点
6.位和字节的关系
7.b、B、KB、MB、GB的关系？
8.请至少列举5个PEP8规范（越多越好）
9.通过代码实现如下转换：
    二进制转成十进制
    十进制转成二进制
    八进制转成十进制
    十进制转成八进制
    十六进制转成十进制
    十进制转成十六进制
10.请编写一个函数实现将IP地址转换成一个整数
    如10.3.9.12转换规则为：
    10
    3
    9
    12
11.Python递归的最大层数
12.求结果：
    v1 = 1 or 3
    v2 = 1 and 3
    v3 = 0 and 2 and 1
    v4 = 0 and 2 or 1
    v5 = 0 and 2 or 1 or 4
    v6 = 0 or Flase and 1
13.ascii、Unicode、utf-8、gbk的区别
14.字节码和机器码的区别
15.三元运算规则以及应用场景
16.列举python2和Python3的区别
17.用一行代码实现数值交换。
    a = 1
    b = 2
18.Python2和Python3中int和long的区别
19.xrange和range的区别
20.文件操作的时候，xreadlines和readlines的区别
21.列举布尔值为false的常见值
22.字符串、列表、元祖、字典每个常见的5个方法
23.lambda表达式格式以及应用场景
24.pass的作用
25.*arg和**kwarg的作用
26.is和==的区别
27.简述Python的深拷贝以及应用场景
28.Python的垃圾回收机制
29.Python的可变类型和不可变类型
30.求结果：
    v = dic.fromKeys(['k1','k2],[])
    v['k1'].append(666)
    print(v)
    v['k1'] = 777
    print(v)
31.求结果：
    def num():
        return [lambda x : i*x for i in range(4)]
    print([m(2) for m in num()])
32.列举常见的内置函数
33.filter、map、reduce、的作用
34.一行代码实现99乘法表
35.如何安装第三方模块？以及用过哪些第三方模块？
36.至少列举常见8个常用模块都有哪些
37.re的match和search区别
38.什么是正则贪婪匹配
39.求结果：
    a.[i % 2 for i in range(10)] b.[i / 2 for i in range(10)]
40.求结果：
    a. 1 or 2 b.1 and 2 c.1<(2==2) d.1<2==2
41.def func(a,b=[])这种写法有什么坑？
42.如何实现"1,2,3"变成['1','2','3']
43.比较：a = [1,2,3]和b = [(1),(2),(3)]以及b = [(1,),(2,),(3,)]的区别
44.如何实现['1','2','3']变成"1,2,3"
45.如何用一行代码生成[1,4,9,25,36,59,64,81,100]
46.一行代码实现删除列表中重复的值
47.如何在函数中设置一个全局变量
48.logging模块的作用？以及应用场景
49.请用代码简单实现stack
50.简述生成器、迭代器、可迭代对象以及应用场景
51.常用字符串格式化有哪几种
52.用Python实现一个二分查找的函数
53.谈谈你对闭包的理解
54.OS和sys模块的作用
55.如何生成一个随机数
56.如何使用Python删除一个文件
57.谈谈对面向对象的理解
58.Python面向对象的继承有什么特点
59.面向对象深度优先和广度优先是什么
60.面向对象中的super的作用
61.是否使用过functools中的函数？其作用是什么？
62.列举面向对象中带双下划线的特殊方法，如：__new__\__init__
63.如何判断是函数还是方法
64.静态方法和类方法区别
65.列举面向对象中的特殊成员以及应用场景
66.1\2\3\4\5、能组成多少个互不相同切不重复的三位数
67.什么是反射？以及应用场景
68.metaclass作用？以及应用场景
69.用尽量多的方法实现单列模式
70.装饰器的写法以及应用场景
71.异常处理写法以及如何主动抛出异常（应用场景）
72.什么是面向对象的mro
73.isinstance作用以及应用场景
74.写代码并实现
    Given an array of integers, return indices of the two numbers such that they add up to a specific target.You may assume that each input would
have exactly one solution, and you may not use the same element twice.
Example: 
          Given nums = [2, 7, 11, 15], target = 9,
            Because nums[0] + nums[1] = 2 + 7 = 9, 
           return [0, 1]

75.json序列化时，可以处理的数据类型有哪些？如何定制支持的datetime类型
76.json序列化时，默认遇到中文会转换成unicode，如果想要保留中文怎么办
77.什么是断言？应用场景？
78.有用过with statement吗？它的好处是什么
79.使用代码实现查看列举目录下的所有文件
80.简述yield和yield from关键字


网络编程和并发
==================================================================

1.简述OSI七层协议
2.什么事C/S和B/S架构
3.简述三次握手、四次挥手的流程
4.设么事arp协议
5.TCP和UDP的区别
6.什么事局域网和广域网
7.为何给予tcp协议的通信比基于udp协议的通信更可靠
8.什么是socket？简述基于tcp协议的套接字通信流程
9.什么是粘包？socket造成粘包的原因是什么？哪些情况下会发生粘包现象
10.IO多路服用的作用
11.什么是防火墙以及作用
12.select、poll、epoll模型的区别
13.简述进程、线程、协程的区别以及应用场景
14.GIL锁是什么
15.Python中如何使用线程池和进程池
16.threading.local的作用
17.进程之间如何进行通信？
18.什么是并发和并行
19.进程锁和线程锁的作用
20.解释什么是异步非阻塞
21.路由器和交换机的区别
22.什么是域名解析
23.如何修改本地hosts文件
24.生产者消费者模型应用场景及优势
25.什么是cdn
26.LVS是什么及作用
27.Nginx是什么及作用
28.keepalived是什么及作用
29.haproxy是什么以及作用
30.什么是负载均衡
31.什么rpc及应用场景
32.简述asynio模块的作用和应用场景
33.简述gevent模块的作用和应用场景
34.twisted框架的使用和应用


数据库和缓存
==================================================================

1.列举常见的关系型数据库和非关系型都有哪些
2.MySQL常见数据库引擎及比较
3.简述数据三大范式
4.什么是事物？MySQL如何支持事物
5.简述数据库设计中一对多和多对多的应用场景？
6.如何基于数据库实现商城商品计数器
7.常见SQL   https://www.cnblogs.com/wupeiqi/articles/5729934.html
8.简述触发器、函数、视图、存储过程
9.MySQL索引种类
10.索引在什么情况下遵循最左前缀的规则
11.主键和外键的区别
12.MySQL常见的函数
13.列举 创建索引但是无法命中索引的8中情况
14.如何开启慢日志查询
15.数据库导入导出命令（结构+数据）
16.数据库优化方案
17.char和varchar的区别
18.简述MySQL的执行计划
19.在对name做了唯一索引的前提下，简述以下区别
    select * from tb where name = 'Oldboy'
    select * fron tb where name = 'Oldboy' limit 1
20.1000w条数据，使用limit offset分页时，为什么越往后翻越慢？如何解决
21.什么事索引合并
22.什么是覆盖索引
23.简述数据库读写分离
24.简述数据库分库分表（水平、垂直）
25.redis和memcached比较
26.redis中数据库默认是多少个db及作用
27.Python操作redis的模块
28.如果redis中的某个列表中的数据量非常大，如和实现循环显示没一个值
29.redis如何实现主从复制？以及数据同步机制
30.redis中的sentinel的作用
31.如何实现redis集群
32.redis中默认有多少个哈希槽
33.简述redis的有哪几种持久化策略及比较
34.列巨额redis支持的过期策略
35.MySQL里有2000w数据，redis中只存20w数据，如何宝成redis中都是热点数据
36.写代码，基于redis的列表实现先进先出、后进先出队列、优先级队列
37.如何基于redis实现消息队列
38.如何基于redis实现发布和订阅？以及发布订阅和消息队列的区别
39.什么是codis及作用
40.什么是twemproxy及作用
41.写代码实现redis事物操作
42.redis中的watch的命令的作用
43.基于redis如何实现商城商品数量计数器
44.简述redis分布式锁和redlock的实现机制
45.什么是一致性哈希？Python中是否有相应模块
46.如何高效的找到redis中所有一Oldboy开头的key


Reference
==================================================================

https://www.cnblogs.com/wupeiqi/p/9078770.html